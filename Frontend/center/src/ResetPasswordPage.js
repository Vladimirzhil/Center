import React, { useState } from 'react';
import axios from 'axios';
import { Link } from 'react-router-dom';
import ReCAPTCHA from 'react-google-recaptcha';
import { FaEye, FaEyeSlash } from 'react-icons/fa'; // üëà –¥–æ–±–∞–≤–∏–º –∏–∫–æ–Ω–∫–∏

const ResetPasswordPage = () => {
  const [email, setEmail] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [showNewPassword, setShowNewPassword] = useState(false); // üëà
  const [showConfirmPassword, setShowConfirmPassword] = useState(false); // üëà
  const [captchaPassed, setCaptchaPassed] = useState(false);
  const [message, setMessage] = useState('');

  const handleCaptchaChange = (token) => {
    setCaptchaPassed(!!token);
    setMessage('');
  };

  const handleCaptchaExpired = () => {
    setCaptchaPassed(false);
    setMessage('–ö–∞–ø—á–∞ –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.');
  };

  const handleCaptchaError = () => {
    setCaptchaPassed(false);
    setMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–ø—á–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!captchaPassed) {
      setMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç');
      return;
    }

    if (newPassword !== confirmPassword) {
      setMessage('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }

    try {
      await axios.post('https://localhost:44397/api/Auth/reset-password', {
        email,
        newPassword,
      });

      setMessage('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!');
    } catch (error) {
      setMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è: ' + (error.response?.data || error.message));
    }
  };

  return (
    <div className="profile-card">
      <h2 className="profile-title">–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="email"
          placeholder="Email"
          required
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />

        <div style={{ position: 'relative' }}>
          <input
            type={showNewPassword ? 'text' : 'password'}
            placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
            required
            value={newPassword}
            onChange={(e) => setNewPassword(e.target.value)}
          />
          <button
            type="button"
            onClick={() => setShowNewPassword(!showNewPassword)}
            style={{
              position: 'absolute',
              right: '25px',
              top: '50%',
              transform: 'translateY(-50%)',
              background: 'none',
              border: 'none',
              cursor: 'pointer',
              padding: 0
            }}
            aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
          >
            {showNewPassword ? <FaEyeSlash size={20} /> : <FaEye size={20} />}
          </button>
        </div>

        <div style={{ position: 'relative' }}>
          <input
            type={showConfirmPassword ? 'text' : 'password'}
            placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            required
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
          />
          <button
            type="button"
            onClick={() => setShowConfirmPassword(!showConfirmPassword)}
            style={{
              position: 'absolute',
              right: '25px',
              top: '50%',
              transform: 'translateY(-50%)',
              background: 'none',
              border: 'none',
              cursor: 'pointer',
              padding: 0
            }}
            aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å –ø–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—è"
          >
            {showConfirmPassword ? <FaEyeSlash size={20} /> : <FaEye size={20} />}
          </button>
        </div>

        <div style={{ display: 'flex', justifyContent: 'center', margin: '15px 0' }}>
          <div style={{ overflow: 'hidden' }}>
            <ReCAPTCHA
              sitekey="6Le3XkYrAAAAAMT3jfLzb41aHBafEBieozm1NxAV"
              onChange={handleCaptchaChange}
              onExpired={handleCaptchaExpired}
              onErrored={handleCaptchaError}
            />
          </div>
        </div>

        <div className="button-center">
          <Link to="/login">
          <button style={{marginTop: '-10px', marginBottom:'15px'
          }} className="btns" type="submit" disabled={!captchaPassed}>
            –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å
          </button>
          </Link>
        </div>

        <p style={{ fontSize: '20px' }}>
          –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <Link className="links" to="/register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
        </p>
      </form>
      {message && <p>{message}</p>}
    </div>
  );
};

export default ResetPasswordPage;
